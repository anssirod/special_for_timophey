part of 'counter_bloc.dart';

@immutable
abstract class CounterEvent extends Equatable {

  //? Что это и зачем?
  //! Здесь мы переопределяем пропы, зачем?
  //* Язык Dart работает так, что если у нас есть некий класс, допустим класс Человек 
  //* и у него есть 2 параметра - возраст и пол
  //* Так вот, если мы создадим 2 экземпляра одного класса С ОДИНАКОВЫМИ параметрами и попытаемся их сравнить
  //* То Dart выдаст нам false, что не логично
  //* Следовательно нужно переопределить некие св-ва знака "==", делается это в 6-8 строк
  //* Но чтобы не захломлять код этим бойлерплейтом существует дополнение Equatable
  //* Которое делает это в 2 строки, что ты можежшь видеть ниже, в [] мы указываем параметры
  //* по которым мы хотим сравнивать экземпляры(в примере с человеком, это будет возраст и  пол)
  //? Зачем нам сравнивать экземпляры каких-то классов? 
  //* А это уже нужно для написания тестов, тк мы по сути, когда мы пишем тесты, 
  //* мы создаем экземпляр класса, в который подаются какие-то данные и сравниваем с другим экземпляром
  @override
  List<Object> get props => []; 
}

//* Это дефолтные ивенты, которые могут быть у нашего counter
class IncrementEvent extends CounterEvent {}

class DecrementEvent extends CounterEvent {}
